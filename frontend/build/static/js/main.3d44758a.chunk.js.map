{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","components/Score.js","App.js","index.js"],"names":["header","currentQuestion","words","length","Figure","errors","wrongLetters","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","check","Popup","setPlayable","playAgain","score","setScore","finalMessage","finalMessageRevealWord","playable","gameOver","updateScore","toUpperCase","useEffect","style","display","onClick","Notification","Score","apiurl","App","useState","message","setMessage","setWrongLetters","setCorrectLetters","setShowNotification","setCurrentQuestion","setWords","layout","setLayout","keyboard","useRef","handleInput","key","toLowerCase","show","fetch","then","response","json","data","console","log","handleKeydown","event","keyCode","window","addEventListener","removeEventListener","Header","keyboardRef","current","layoutName","onKeyPress","charCodeAt","nextQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d44758a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst header = ({currentQuestion,words}) =>{\r\n    return (\r\n        <>\r\n            {/* <img src=\"https://ptcl.com.pk/images/PressReleasePTCL%20logo.jpg\" style={{height: \"100px\",width:\"250px\",backgroundColor:\"transparent\"}} />\r\n            <div style={{color:\"black\"}} > */}\r\n                <h1>Hangman</h1>\r\n                <p>Find the hidden word - Enter a letter</p>\r\n                <p>Question {currentQuestion + 1}/{words.length}</p>\r\n            {/*</div>*/}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default header;","import React from 'react';\r\n\r\nconst Figure = ({wrongLetters}) =>{\r\n\r\n    const errors = wrongLetters.length;\r\n\r\n    return (\r\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n \r\n            {/*Rod*/}\r\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n            {/*Head*/}\r\n            { errors>0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\r\n\r\n            {/*Body*/}\r\n            { errors>1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\"  />}\r\n\r\n            {/*Arms */}\r\n            { errors>2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\"  />}\r\n            { errors>3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\"  />}\r\n\r\n            {/*Legs*/}\r\n            { errors>4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\"  />}\r\n            { errors>5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\"  />}\r\n\r\n      </svg>\r\n      );\r\n}\r\n\r\nexport default Figure;","import React from 'react'\r\n\r\nconst WrongLetters = ({wrongLetters}) => {\r\n    return (\r\n        <div className=\"wrong-letters-container\">\r\n            <div>\r\n            {wrongLetters.length > 0 && <p className=\"Wrong\">Wrong</p>}\r\n            {wrongLetters\r\n                .map( (letter,i) =>  <span key={i}>{letter}</span>)\r\n                .reduce((prev,curr) => prev === null ? [curr] : [prev,', ',curr], null)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WrongLetters;\r\n","import React from 'react'\r\n\r\nconst Word = ({selectedWord,correctLetters}) => {\r\n    return (\r\n        <div className=\"word\">\r\n            {selectedWord.split('').map( (letter,i) => {\r\n                return (\r\n                    <span className=\"letter\" key ={i}>\r\n                        {correctLetters.includes(letter) ? letter : ''}\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default Word;\r\n","export function showNotification(setter){\r\n    setter(true);\r\n    setTimeout(() => {\r\n        setter(false);\r\n    }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word){\r\n    let status = 'win';\r\n\r\n    //check for win\r\n    word.split('').forEach(letter=>{\r\n        if(!correct.includes(letter)){\r\n            status = '';\r\n        }\r\n    });\r\n\r\n    //check for loss\r\n    if (wrong.length === 6)\r\n        status = 'lose';\r\n    \r\n    return status;\r\n}","import React, {useEffect} from 'react';\r\nimport {checkWin} from '../helpers/helpers';\r\n\r\nlet check = false;\r\n\r\nconst Popup = ({correctLetters,wrongLetters,setPlayable,selectedWord, playAgain, currentQuestion, words, score, setScore}) => {\r\n    let finalMessage = '';\r\n    let finalMessageRevealWord = '';\r\n    let playable = true;\r\n    let gameOver = false;\r\n\r\n    function updateScore(){\r\n        if(!check){\r\n            check = true;\r\n            setScore(score => (score + 1));\r\n        }\r\n    };\r\n\r\n    if ((checkWin(correctLetters,wrongLetters,selectedWord) === 'win') && (currentQuestion < words.length -1)){\r\n        finalMessage = 'Congratulations, you guessed it right!';\r\n        playable = false;\r\n        updateScore();\r\n    } else if ((checkWin(correctLetters,wrongLetters,selectedWord) === 'lose') && (currentQuestion < words.length -1)){\r\n        finalMessage = 'Unfortunately, you could not guess it.';\r\n        finalMessageRevealWord = `... the word was ${selectedWord.toUpperCase()}`;\r\n        playable = false;\r\n    } else if ( (checkWin(correctLetters,wrongLetters,selectedWord) === 'lose') && (currentQuestion === words.length -1)){\r\n        finalMessage = 'Unfortunately, you could not guess it.';\r\n        finalMessageRevealWord = `... the word was ${selectedWord.toUpperCase()}, You scored ${score} out of ${words.length}`;\r\n        gameOver = true;\r\n        playable = false;\r\n    }else if((checkWin(correctLetters,wrongLetters,selectedWord) === 'win') && (currentQuestion === words.length -1 )){\r\n        finalMessage = 'Congratulations, you guessed it right!';\r\n        finalMessageRevealWord = `You scored ${score} out of ${words.length}`;\r\n        gameOver = true;\r\n        playable = false;\r\n        updateScore();\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPlayable(playable)\r\n        if(playable)\r\n            check = false;\r\n        else\r\n            check = true;\r\n    });\r\n\r\n    return (\r\n        <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}} >\r\n            <div className=\"popup\">\r\n                <h2>{finalMessage}</h2>\r\n                <h3>{finalMessageRevealWord}</h3>\r\n                <button onClick={() => playAgain(gameOver)}>{(!gameOver)?\"Next Word\":\"Start Over\"}</button>\r\n            </div>\r\n         </div>    \r\n    );\r\n}\r\n\r\nexport default Popup;\r\n","import React from 'react'\r\n\r\nconst Notification = ({showNotification}) => {\r\n    return (\r\n        <div className= {`notification-container ${showNotification ? 'show' : ''}`} >\r\n          <p>You have already entered this letter</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react'\r\n\r\nconst Score = ({score,words}) => {\r\n    return (\r\n        <div >\r\n            <p>Score {score}/{words.length}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Score;\r\n","import './App.css';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport Header from './components/Header';\r\nimport React from 'react';\r\nimport Figure from './components/Figure';\r\nimport WrongLetters from './components/WrongLetters';\r\nimport Word from './components/Word';\r\nimport {showNotification as show} from './helpers/helpers';\r\nimport Popup from './components/Popup';\r\nimport Notification from './components/Notification';\r\nimport Score from './components/Score';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport 'react-simple-keyboard/build/css/index.css';\r\n\r\nconst apiurl = 'https://random-word-api.herokuapp.com/word?number=10&swear=0';\r\n\r\nlet selectedWord = '';\r\n  \r\nfunction App() {\r\n\r\n  const [message,setMessage] = useState('');\r\n  const [playable,setPlayable] = useState(true);\r\n  const [wrongLetters,setWrongLetters] = useState([]);\r\n  const [correctLetters,setCorrectLetters] = useState([]);\r\n  const [showNotification,setShowNotification] = useState(false);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [words, setWords] = useState([]);\r\n  const [layout, setLayout] = useState(\"default\");\r\n  const keyboard = useRef();\r\n\r\n  const handleShift = () => {\r\n    const newLayoutName = layout === \"default\" ? \"shift\" : \"default\";\r\n    setLayout(newLayoutName);\r\n  };\r\n\r\n  function handleInput(key){\r\n    const letter = key.toLowerCase();\r\n\r\n    if (selectedWord.includes(letter)) {\r\n      if (!correctLetters.includes(letter)) {\r\n        setCorrectLetters(correctLetters => [...correctLetters, letter])\r\n      } else {\r\n        show(setShowNotification);\r\n      }\r\n    } else {\r\n      if (!wrongLetters.includes(letter)) {\r\n        setWrongLetters(wrongLetters => [...wrongLetters, letter])\r\n      } else {\r\n        show(setShowNotification);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onKeyPress = key => {\r\n    let keyCode = key.toUpperCase().charCodeAt();\r\n\r\n    if (key === \"{shift}\" || key === \"{lock}\") handleShift();\r\n\r\n    else if(playable && keyCode >= 65 && keyCode <= 90) \r\n      handleInput(key);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetch(\"/api\").then(response=>response.json().then(data=>{\r\n        console.log(data);\r\n        setMessage(data['tutorial']);\r\n      }))\r\n    }, []);\r\n  \r\n\r\n  useEffect(()=>{\r\n    fetch(apiurl).then((data) => \r\n      data.json()).then(data=>{\r\n        setWords(data);\r\n      })\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    if(words.length!==0){\r\n      selectedWord = words[currentQuestion];\r\n    }\r\n  },[words])\r\n\r\n  if(words.length!==0){\r\n    selectedWord = words[currentQuestion];\r\n    //console.log('word selected is: ',selectedWord);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const handleKeydown = event =>{\r\n\r\n      const {key, keyCode} = event;\r\n\r\n        if (playable && keyCode >= 65 && keyCode <= 90)    \r\n          handleInput(key);\r\n      }\r\n\r\n    window.addEventListener('keydown',handleKeydown);\r\n    return () => window.removeEventListener('keydown',handleKeydown);\r\n  \r\n  },[correctLetters,wrongLetters,playable]);\r\n\r\n  const playAgain=(gameOver)=>{\r\n    setPlayable(true);\r\n\r\n    if(!gameOver){\r\n      let nextQuestion = currentQuestion + 1;\r\n      if(nextQuestion < words.length){\r\n        selectedWord = words[nextQuestion];\r\n        setCurrentQuestion(nextQuestion);\r\n      }else{\r\n        setCurrentQuestion(nextQuestion);\r\n      }\r\n    }\r\n\r\n    else{\r\n      fetch(apiurl).then((data) => \r\n      data.json()).then(data=>{\r\n        setWords(data);\r\n      });\r\n      setCurrentQuestion(0);\r\n      setScore(0);\r\n    }\r\n      // clear arrays\r\n      setCorrectLetters([]);\r\n      setWrongLetters([]);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n        <h1>{message}</h1>\r\n        <Header currentQuestion={currentQuestion} words={words} />\r\n        <WrongLetters wrongLetters={wrongLetters} />\r\n      \r\n        <div className=\"App\">          \r\n          <Figure wrongLetters={wrongLetters} />\r\n          {(words.length!==0)?\r\n          <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n          :false}\r\n          {(showNotification)?\r\n          <Notification showNotification={showNotification}/>\r\n          : false}\r\n\r\n      {(words.length!==0)?\r\n      <div>\r\n        <div className=\"App\">\r\n          <Score score={score} words={words}/>\r\n        </div>\r\n\r\n        <div className=\"Keyboard\">\r\n          <Keyboard\r\n            keyboardRef={r => (keyboard.current = r)}\r\n            layoutName={layout}\r\n            onKeyPress={onKeyPress}/>\r\n        </div>\r\n\r\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} setPlayable={setPlayable} \r\n       selectedWord={selectedWord} playAgain={playAgain} currentQuestion={currentQuestion} words={words} score={score} setScore={setScore} />      \r\n      </div>\r\n      :false}      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}